(defvar battery-hover false)
(defvar battery-icons "[\"battery_0_bar\",
                        \"battery_1_bar\",
                        \"battery_2_bar\",
                        \"battery_3_bar\",
                        \"battery_4_bar\",
                        \"battery_5_bar\",
                        \"battery_full\"]")

(defwidget battery []
  (eventbox :onhover "${EWW_CMD} update battery-hover=true"
            :onhoverlost "${EWW_CMD} update battery-hover=false"
            (box :class "rounded-lg px-2 bg-surface0"
                 :space-evenly false
                 (label :class "font-material font-size-sm fg-${jq(EWW_BATTERY, 'to_entries[0].value.status') == '\"Charging\"'
                                                                ? 'green'
                                                                : jq(EWW_BATTERY, 'to_entries[0].value.status') == '\"Discharging\"'
                                                                    && jq(EWW_BATTERY, 'to_entries[0].value.capacity') < 10
                                                                  ? 'red'
                                                                  : 'text'}"
                        :text {battery-icons[round(jq(EWW_BATTERY, 'to_entries[0].value.capacity') * (arraylength(battery-icons) - 1) / 100, 0)]})
                 (revealer :transition "slideleft"
                           :reveal battery-hover
                           (label :class "font-sans font-size-xs fg-text"
                                  :text "${jq(EWW_BATTERY, 'to_entries[0].value.capacity')}%")))))
